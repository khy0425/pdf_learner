name: Deploy PDF Learner

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build_and_deploy:
    name: 빌드 및 배포
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v2
      
      - name: Flutter 설정
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.19.0'
          channel: 'stable'
      
      - name: 의존성 설치
        run: flutter pub get
      
      - name: 환경 변수 파일 생성
        run: |
          echo "환경 변수 파일 생성 중..."
          echo "FIREBASE_API_KEY=${{ secrets.FIREBASE_API_KEY }}" > .env
          echo "FIREBASE_AUTH_DOMAIN=${{ secrets.FIREBASE_AUTH_DOMAIN }}" >> .env
          echo "FIREBASE_PROJECT_ID=${{ secrets.FIREBASE_PROJECT_ID }}" >> .env
          echo "FIREBASE_STORAGE_BUCKET=${{ secrets.FIREBASE_STORAGE_BUCKET }}" >> .env
          echo "FIREBASE_MESSAGING_SENDER_ID=${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}" >> .env
          echo "FIREBASE_APP_ID=${{ secrets.FIREBASE_APP_ID }}" >> .env
          echo "FIREBASE_MEASUREMENT_ID=${{ secrets.FIREBASE_MEASUREMENT_ID }}" >> .env
          echo "GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}" >> .env
          echo "GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }}" >> .env
          echo "HUGGING_FACE_API_KEY=${{ secrets.HUGGING_FACE_API_KEY }}" >> .env
      
      - name: 웹 빌드
        run: flutter build web --release --web-renderer canvaskit
      
      - name: 환경 변수 대체
        run: |
          echo "환경 변수 대체 중..."
          sed -i "s/__FIREBASE_API_KEY__/${{ secrets.FIREBASE_API_KEY }}/g" build/web/index.html
          sed -i "s/__FIREBASE_AUTH_DOMAIN__/${{ secrets.FIREBASE_AUTH_DOMAIN }}/g" build/web/index.html
          sed -i "s/__FIREBASE_PROJECT_ID__/${{ secrets.FIREBASE_PROJECT_ID }}/g" build/web/index.html
          sed -i "s/__FIREBASE_STORAGE_BUCKET__/${{ secrets.FIREBASE_STORAGE_BUCKET }}/g" build/web/index.html
          sed -i "s/__FIREBASE_MESSAGING_SENDER_ID__/${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}/g" build/web/index.html
          sed -i "s/__FIREBASE_APP_ID__/${{ secrets.FIREBASE_APP_ID }}/g" build/web/index.html
          sed -i "s/__FIREBASE_MEASUREMENT_ID__/${{ secrets.FIREBASE_MEASUREMENT_ID }}/g" build/web/index.html
          sed -i "s/__GOOGLE_CLIENT_ID__/${{ secrets.GOOGLE_CLIENT_ID }}/g" build/web/index.html
      
      - name: Firebase CLI 설치
        run: npm install -g firebase-tools
      
      - name: Firebase 배포
        run: firebase deploy --only hosting --token "${{ secrets.FIREBASE_TOKEN }}"
        
      - name: 보안 스캔
        run: |
          echo "배포된 웹사이트 보안 스캔 중..."
          # 여기에 OWASP ZAP 등의 보안 스캔 도구 실행 명령 추가
          # 예: docker run -t owasp/zap2docker-stable zap-baseline.py -t https://your-site.web.app
      
      - name: 취약점 보고서 생성
        if: always()
        run: |
          echo "보안 취약점 보고서 생성 중..."
          # 보고서 생성 및 저장 명령
          
      - name: 빌드 아티팩트 정리
        if: always()
        run: |
          echo "민감한 빌드 아티팩트 정리 중..."
          rm -f .env
          find . -name "*.keystore" -delete
          find . -name "*firebase*.json" -delete 