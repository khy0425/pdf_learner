rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // 사용자 인증 체크 헬퍼 함수
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // 본인 확인 헬퍼 함수
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    // 관리자 확인 헬퍼 함수 (사용자 컬렉션에서 관리자 필드 확인)
    function isAdmin() {
      return isAuthenticated() && exists(/databases/$(database)/documents/users/$(request.auth.uid)) && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
    
    // 데이터 검증 헬퍼 함수
    function isValidUserData(data) {
      return data.size() <= 50 && // 필드 수 제한
             (data.createdAt is timestamp || data.createdAt is string) && // 생성일 필드 검증
             data.email is string && data.email.size() <= 100; // 이메일 검증
    }
    
    // 사용자 컬렉션 규칙
    match /users/{userId} {
      // 사용자는 자신의 문서만 읽을 수 있음
      allow read: if isOwner(userId) || isAdmin();
      
      // 사용자는 자신의 문서만 생성/수정할 수 있음
      allow create: if isOwner(userId) && isValidUserData(request.resource.data);
      allow update: if isOwner(userId) && isValidUserData(request.resource.data);
      
      // 관리자만 사용자 삭제 가능
      allow delete: if isAdmin();
    }
    
    // PDF 파일 컬렉션 규칙
    match /pdf_files/{fileId} {
      // 소유자 또는 공유 대상자만 읽기 가능
      allow read: if isAuthenticated() && (
        resource.data.userId == request.auth.uid || 
        resource.data.sharedWith[request.auth.uid] == true
      );
      
      // 인증된 사용자만 생성 가능
      allow create: if isAuthenticated() && 
                     request.resource.data.userId == request.auth.uid &&
                     request.resource.data.fileSize <= 10 * 1024 * 1024; // 최대 10MB
      
      // 소유자만 업데이트/삭제 가능
      allow update: if isAuthenticated() && resource.data.userId == request.auth.uid;
      allow delete: if isAuthenticated() && resource.data.userId == request.auth.uid;
    }
    
    // 구독 정보 컬렉션 규칙
    match /subscriptions/{subId} {
      // 소유자 또는 관리자만 읽기 가능
      allow read: if isAuthenticated() && (
        resource.data.userId == request.auth.uid || isAdmin()
      );
      
      // 관리자만 생성/업데이트/삭제 가능
      allow create, update, delete: if isAdmin();
    }
    
    // 기본 차단 규칙
    match /{document=**} {
      allow read, write: if false;
    }
  }
}